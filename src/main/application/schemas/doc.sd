#Copyright Yahoo. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
schema doc {

  document doc { 

    struct author {
      field name type string {}
      field first type string {}
      field last type string {}
      field middle type string {}
      field suffix type string {}
      field email type string {}
    }

    field datestring type string {
      indexing: summary 
    }

    field timestamp type long {
      indexing: summary | attribute
    }

    field license type string {
      indexing: summary | attribute
    }

    field source type string {
      indexing: summary | attribute
    }

    field journal type string {
      indexing: summary | attribute
    }

    field pmcid type string {
      indexing: summary
    }

    field pubmed_id type long {
      indexing: summary | attribute
    }

    field who_covidence type string {
      indexing: summary | attribute 
    }

    field doi type string {
      indexing: summary
    }

    field id type int {
      indexing: summary | attribute
      attribute: fast-search
    }

    field cord_uid type string {
      indexing: summary | attribute
      attribute:fast-search
    }

    field url type string {
      indexing: summary 
    }

    field title type string {
      bolding: true
      indexing: summary | index
      index: enable-bm25
    }

    field abstract type string {
      indexing: summary | index
      summary: dynamic
      index: enable-bm25
    }

    field authors type array<author> {
      indexing: summary
      struct-field name { indexing: attribute }
      struct-field first { indexing: attribute }
      struct-field last { indexing: attribute }
    }

    field specter_embedding type tensor<float>(x[768]) {
      indexing: attribute | index | summary
      index {
        hnsw {
          max-links-per-node: 32
          neighbors-to-explore-at-insert: 200
        }
      }
    }
    field dt type tensor<bfloat16>(dt{}, x[32]){
      indexing: summary | attribute
      attribute: fast-rank
    }
    field related_to type int {}
  }

  fieldset default {
    fields: title, abstract 
  }

   field title_token_ids type tensor<float>(d0[128])  {
     indexing: input title | embed tokenizer | summary | attribute
     attribute: paged
   }

   field abstract_token_ids type tensor<float>(d0[128])  {
     indexing: input abstract | embed tokenizer | summary | attribute
     attribute: paged
   }

  document-summary short {
    from-disk
    summary title type string {source: title}
    summary abstract type string {source: abstract}
    summary journal type string {source: journal}
    summary id type int {source: id}
    summary timestamp type long {source:timestamp} 
    summary license type string {source:license}
    summary doi type string {source:doi}
    summary authors type array<author>{source:authors}
    summary source type string {source:source}
  }

  document-summary embeddings {
    summary specter_embedding type tensor<float>(x[768]) {
      source: specter_embedding
    }
  }

  document-summary full  {
    from-disk
    summary title-full type string {
      source:title
      full
    }  

    summary id type int {
      source:id  
      full
    }  

    summary abstract-full type string {
      source: abstract
      full
    }  
  }

  rank-profile default inherits default {
    first-phase {
      expression: nativeRank(title) + nativeRank(abstract) 
    }
  }

  rank-profile bm25 inherits default {
    first-phase {
      expression: bm25(title) + bm25(abstract)
    }
  }
  
  rank-profile bm25t5 inherits bm25 {
    first-phase {
      expression: bm25(title) + bm25(abstract) 
    }
  }

  rank-profile freshness inherits default {
    first-phase {
      expression: attribute(timestamp)
    }
  }

  rank-profile related-specter {
    inputs {
        query(specter_vector) tensor<float>(x[768])
    }
    first-phase {
      expression: closeness(specter_embedding)
    }
  }

}
